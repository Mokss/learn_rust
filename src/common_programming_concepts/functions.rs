#[allow(dead_code)]
fn get_five(is_negative: bool) -> i32 {
    // если просто написать 5, без return и точки с запятой,
    // то это будет считаться выходом из функции с аргументом
    // но если дальше писать код, то будет ошибка
    // можно стандартно писать return 5; и после ретуртн так же описывать код, пример условные блоки
    // что за приколы возвращать значения без return как это сделано в y, очень странная дичь
    // это вообще не читаемая херня, странный язык
    if is_negative {
        // так валидно, мы возвращаем -5, но не валидно, если будем писать -5;
        -5
    } else {
        // и так валидно мы возвращаем 5
        return 5;
    }
}

#[allow(dead_code)]
pub fn test() {
    // ЭТО ЧТО ЗА ДИЧ, офигеть
    let y = {
        let x = get_five(false);
        let str = " or six";
        // если в конце не ставить ; то будет считаться как возвращаемое значение
        // return никаких не нужно, господи, зачем так делать
        (x + 1).to_string() + str
    };

    println!("The value of y is: {y}");
}